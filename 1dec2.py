Python 3.10.8 (tags/v3.10.8:aaaf517, Oct 11 2022, 16:50:30) [MSC v.1933 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
name="python"
"t" in name
True
for x in name:
    print("x")

    
x
x
x
x
x
x
name="aakarshak"
"r" in name
True
for x in name
SyntaxError: incomplete input
for x in name:
    print("x")

    
x
x
x
x
x
x
x
x
x
name="python""t" in name
name="python""t" in name
Traceback (most recent call last):
  File "<pyshell#12>", line 1, in <module>
    name="python""t" in name
TypeError: argument of type 'bool' is not iterable
name="aakarshak"
"k"in name
True
for x in name
SyntaxError: incomplete input
for x in name:
    print(x)

    
a
a
k
a
r
s
h
a
k
name="aakarshak"
"k" in name
True
for x in range(100):
    print(x)

    
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
for x in range(100):
    if x>25:
        print(x+"25")
        if x==50:
            print(fifty)
            if x>=80:
                print(eighty)

                
Traceback (most recent call last):
  File "<pyshell#30>", line 3, in <module>
    print(x+"25")
TypeError: unsupported operand type(s) for +: 'int' and 'str'
for x in range(100):
    if x>25:
        print(x+25)
        if x==50:
            print(fifty)
            if x>=80:
                print(eighty)

                
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
Traceback (most recent call last):
  File "<pyshell#32>", line 5, in <module>
    print(fifty)
NameError: name 'fifty' is not defined
for x in range(100):
    if x>25:
        print(x+25)
    if x==50:
         print(fifty)
     if x>=80:
         print(eighty)
         
SyntaxError: unindent does not match any outer indentation level
for x in range(100):
    if x>25:
        print(x+25)
    if x==50:
        print(fifty)
    if x>=80:
        print(eighty)

        
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
Traceback (most recent call last):
  File "<pyshell#35>", line 5, in <module>
    print(fifty)
NameError: name 'fifty' is not defined
for x in range(100):
    if x>25:
        print(x+25)
    if x==50:
        print("fifty")
    if x>=80:
        print("eighty")

        
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
fifty
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
eighty
106
eighty
107
eighty
108
eighty
109
eighty
110
eighty
111
eighty
112
eighty
113
eighty
114
eighty
115
eighty
116
eighty
117
eighty
118
eighty
119
eighty
120
eighty
121
eighty
122
eighty
123
eighty
124
eighty
for x in range(100):
    if x>25:
        print(x+"25")
    if x==50:
        print("fifty")
    if x>=80:
        print("eighty")

        
Traceback (most recent call last):
  File "<pyshell#39>", line 3, in <module>
    print(x+"25")
TypeError: unsupported operand type(s) for +: 'int' and 'str'
for x in range(100):
    if x>25:
        print(str(x)+"25")
    if x==50:
        print("fifty")
    if x>=80:
        print("eighty")

        
2625
2725
2825
2925
3025
3125
3225
3325
3425
3525
3625
3725
3825
3925
4025
4125
4225
4325
4425
4525
4625
4725
4825
4925
5025
fifty
5125
5225
5325
5425
5525
5625
5725
5825
5925
6025
6125
6225
6325
6425
6525
6625
6725
6825
6925
7025
7125
7225
7325
7425
7525
7625
7725
7825
7925
8025
eighty
8125
eighty
8225
eighty
8325
eighty
8425
eighty
8525
eighty
8625
eighty
8725
eighty
8825
eighty
8925
eighty
9025
eighty
9125
eighty
9225
eighty
9325
eighty
9425
eighty
9525
eighty
9625
eighty
9725
eighty
9825
eighty
9925
eighty
for x in range(100):
    if x>25:
        print(str(x)+"--25")
    if x==50:
        print("fifty")
    if x>=80:
        print("eighty")

        
26--25
27--25
28--25
29--25
30--25
31--25
32--25
33--25
34--25
35--25
36--25
37--25
38--25
39--25
40--25
41--25
42--25
43--25
44--25
45--25
46--25
47--25
48--25
49--25
50--25
fifty
51--25
52--25
53--25
54--25
55--25
56--25
57--25
58--25
59--25
60--25
61--25
62--25
63--25
64--25
65--25
66--25
67--25
68--25
69--25
70--25
71--25
72--25
73--25
74--25
75--25
76--25
77--25
78--25
79--25
80--25
eighty
81--25
eighty
82--25
eighty
83--25
eighty
84--25
eighty
85--25
eighty
86--25
eighty
87--25
eighty
88--25
eighty
89--25
eighty
90--25
eighty
91--25
eighty
92--25
eighty
93--25
eighty
94--25
eighty
95--25
eighty
96--25
eighty
97--25
eighty
98--25
eighty
99--25
eighty
for x in range(100):
    if x>25:
        print(str(x)+"--25")
    if x==50:
        print("fifty")
    if x>=80:
        print("eighty")
    if x<=100
    
SyntaxError: incomplete input
for x in range(100):
    if x>25:
        print(str(x)+"--25")
    if x==50:
        print("fifty")
    if x>=80:
        print("eighty")
    if x<=100:
        print("hundred")

        
hundred
hundred
hundred
hundred
hundred
hundred
hundred

hundred
hundred
hundred
hundred
hundred
hundred
hundred
hundred
hundred
hundred
hundred
hundred
hundred
hundred
hundred
hundred
hundred
hundred
hundred
26--25
hundred
27--25
hundred
28--25
hundred
29--25
hundred
30--25
hundred
31--25
hundred
32--25
hundred
33--25
hundred
34--25
hundred
35--25
hundred
36--25
hundred
37--25
hundred
38--25
hundred
39--25
hundred
40--25
hundred
41--25
hundred
42--25
hundred
43--25
hundred
44--25
hundred
45--25
hundred
46--25
hundred
47--25
hundred
48--25
hundred
49--25
hundred
50--25
fifty
hundred
51--25
hundred
52--25
hundred
53--25
hundred
54--25
hundred
55--25
hundred
56--25
hundred
57--25
hundred
58--25
hundred
59--25
hundred
60--25
hundred
61--25
hundred
62--25
hundred
63--25
hundred
64--25
hundred
65--25
hundred
66--25
hundred
67--25
hundred
68--25
hundred
69--25
hundred
70--25
hundred
71--25
hundred
72--25
hundred
73--25
hundred
74--25
hundred
75--25
hundred
76--25
hundred
77--25
hundred
78--25
hundred
79--25
hundred
80--25
eighty
hundred
81--25
eighty
hundred
82--25
eighty
hundred
83--25
eighty
hundred
84--25
eighty
hundred
85--25
eighty
hundred
86--25
eighty
hundred
87--25
eighty
hundred
88--25
eighty
hundred
89--25
eighty
hundred
90--25
eighty
hundred
91--25
eighty
hundred
92--25
eighty
hundred
93--25
eighty
hundred
94--25
eighty
hundred
95--25
eighty
hundred
96--25
eighty
hundred
97--25
eighty
hundred
98--25
eighty
hundred
99--25
eighty
hundred
for i in range(10,100)
SyntaxError: incomplete input
for i in range(10,100):
    if i%2==0:
        print(i)
        for x in range (i):
            print(x)

            
10
0
1
2
3
4
5
6
7
8
9
12
0
1
2
3
4
5
6
7
8
9
10
11
14
0
1
2
3
4
5
6
7
8
9
10
11
12
13
16
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
18
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
20
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
22
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
24
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
26
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
28
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
30
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
32
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
34
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
36
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
38
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
40
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
42
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
44
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
46
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
48
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
50
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
52
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
54
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
56
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
58
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
60
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
62
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
64
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
66
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
68
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
70
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
72
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
74
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
76
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
78
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
80
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
82
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
84
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
86
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
88
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
90
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
92
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
94
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
96
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
98
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
for i in range(10,100):
    if i%2==0:
        print(@@@)
        for x in range (i):
            print(\t)
            
SyntaxError: invalid syntax
for i in range(10,100):
    if i%2==0:
        print(**)
        for x in range (i):
            print(\t)
            
SyntaxError: invalid syntax

for i in range(10,100):
    if i%2==0:
        print("**")
        for x in range (i):
            print(\t)
            
SyntaxError: unexpected character after line continuation character

for i in range(10,100):
    if i%2==0:
        print("**")
        for x in range (i):
            print("\t")

            
**
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
**
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
for i in range(10,100):
    if i%2==0:
        print("**")
       #for x in range (i):
            #print("\t")
        #print(x)
else:
    print("fail")

    
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
fail
for i in range(10,100):
    if i%2==0:
        print("**")
       #for x in range (i):
            #print("\t")
        #print(x)
else:
    print("fail",i)

    
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
fail 99
for i in range(10,100):
    if i%2==0:
        print("**")
       for x in range (i):
            print("\t")
        print(x)
else:
    print("fail",i)
    
SyntaxError: unindent does not match any outer indentation level
for i in range(10,100):
    if i%2==0:
        print("**")
       for x in range (i):
        print("\t")
        print(x)
else:
    print("fail",i)
    
SyntaxError: unindent does not match any outer indentation level

for i in range(10,100):
    if i%2==0:
        print("**")
       for x in range (i):
        print("\t")
        print(x)
    else:
    print("fail",i)
    
SyntaxError: unindent does not match any outer indentation level
for i in range(10,100):
    if i%2==0:
        print("**")
    for x in range (i):
        print("\t")
        print(x)
    else:
        print("fail",i)

        
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
fail 10
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
fail 11
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
fail 12
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
fail 13
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
fail 14
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
fail 15
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
fail 16
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
fail 17
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
fail 18
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
fail 19
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
fail 20
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
fail 21
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
fail 22
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
fail 23
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
fail 24
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
fail 25
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
fail 26
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
fail 27
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
fail 28
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
fail 29
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
fail 30
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
fail 31
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
fail 32
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
fail 33
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
fail 34
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
fail 35
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
fail 36
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
fail 37
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
fail 38
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
fail 39
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
fail 40
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
fail 41
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
fail 42
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
fail 43
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
fail 44
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
fail 45
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
fail 46
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
fail 47
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
fail 48
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
fail 49
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
fail 50
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
fail 51
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
fail 52
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
fail 53
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
fail 54
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
fail 55
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
fail 56
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
fail 57
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
fail 58
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
fail 59
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
fail 60
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
fail 61
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
fail 62
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
fail 63
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
fail 64
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
fail 65
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
fail 66
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
fail 67
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
fail 68
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
fail 69
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
fail 70
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
fail 71
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
fail 72
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
fail 73
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
fail 74
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
fail 75
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
fail 76
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
fail 77
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
fail 78
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
fail 79
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
fail 80
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
fail 81
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
fail 82
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
	
82
fail 83
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
	
82
	
83
fail 84
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
	
82
	
83
	
84
fail 85
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
	
82
	
83
	
84
	
85
fail 86
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
	
82
	
83
	
84
	
85
	
86
fail 87
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
	
82
	
83
	
84
	
85
	
86
	
87
fail 88
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
	
82
	
83
	
84
	
85
	
86
	
87
	
88
fail 89
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
	
82
	
83
	
84
	
85
	
86
	
87
	
88
	
89
fail 90
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
	
82
	
83
	
84
	
85
	
86
	
87
	
88
	
89
	
90
fail 91
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
	
82
	
83
	
84
	
85
	
86
	
87
	
88
	
89
	
90
	
91
fail 92
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
	
82
	
83
	
84
	
85
	
86
	
87
	
88
	
89
	
90
	
91
	
92
fail 93
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
	
82
	
83
	
84
	
85
	
86
	
87
	
88
	
89
	
90
	
91
	
92
	
93
fail 94
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
	
82
	
83
	
84
	
85
	
86
	
87
	
88
	
89
	
90
	
91
	
92
	
93
	
94
fail 95
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
	
82
	
83
	
84
	
85
	
86
	
87
	
88
	
89
	
90
	
91
	
92
	
93
	
94
	
95
fail 96
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
	
82
	
83
	
84
	
85
	
86
	
87
	
88
	
89
	
90
	
91
	
92
	
93
	
94
	
95
	
96
fail 97
**
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
	
82
	
83
	
84
	
85
	
86
	
87
	
88
	
89
	
90
	
91
	
92
	
93
	
94
	
95
	
96
	
97
fail 98
	
0
	
1
	
2
	
3
	
4
	
5
	
6
	
7
	
8
	
9
	
10
	
11
	
12
	
13
	
14
	
15
	
16
	
17
	
18
	
19
	
20
	
21
	
22
	
23
	
24
	
25
	
26
	
27
	
28
	
29
	
30
	
31
	
32
	
33
	
34
	
35
	
36
	
37
	
38
	
39
	
40
	
41
	
42
	
43
	
44
	
45
	
46
	
47
	
48
	
49
	
50
	
51
	
52
	
53
	
54
	
55
	
56
	
57
	
58
	
59
	
60
	
61
	
62
	
63
	
64
	
65
	
66
	
67
	
68
	
69
	
70
	
71
	
72
	
73
	
74
	
75
	
76
	
77
	
78
	
79
	
80
	
81
	
82
	
83
	
84
	
85
	
86
	
87
	
88
	
89
	
90
	
91
	
92
	
93
	
94
	
95
	
96
	
97
	
98
fail 99
for i in range(10,100):
    if i%2==0:
        print("**")
       #for x in range (i):
            #print("\t")
        #print(x)
else:
    print("fail",i)

    
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
**
fail 99
for num in range(1,101)
SyntaxError: incomplete input
for num in range(1,101):
    if num%2=0:
        
SyntaxError: cannot assign to expression here. Maybe you meant '==' instead of '='?
for num in range(1,101):
    if (num%2=0):
        
SyntaxError: cannot assign to expression here. Maybe you meant '==' instead of '='?
for num in range(1,101):
    if (num%2==0):
        print("even")
    else:
        print("odd")

        
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
odd
even
for num in range(1,101):
    if (num%2==0):
        print("even",num)
    else:
        print("odd",num)

        
odd 1
even 2
odd 3
even 4
odd 5
even 6
odd 7
even 8
odd 9
even 10
odd 11
even 12
odd 13
even 14
odd 15
even 16
odd 17
even 18
odd 19
even 20
odd 21
even 22
odd 23
even 24
odd 25
even 26
odd 27
even 28
odd 29
even 30
odd 31
even 32
odd 33
even 34
odd 35
even 36
odd 37
even 38
odd 39
even 40
odd 41
even 42
odd 43
even 44
odd 45
even 46
odd 47
even 48
odd 49
even 50
odd 51
even 52
odd 53
even 54
odd 55
even 56
odd 57
even 58
odd 59
even 60
odd 61
even 62
odd 63
even 64
odd 65
even 66
odd 67
even 68
odd 69
even 70
odd 71
even 72
odd 73
even 74
odd 75
even 76
odd 77
even 78
odd 79
even 80
odd 81
even 82
odd 83
even 84
odd 85
even 86
odd 87
even 88
odd 89
even 90
odd 91
even 92
odd 93
even 94
odd 95
even 96
odd 97
even 98
odd 99
even 100
for num in range(1,101):
    if (num%2!=0):
        print("even",num)
    else
        print("odd",num)
        
SyntaxError: expected ':'

for num in range(1,101):
    if (num%2!=0):
        print("even",num)
    else:
        print("odd",num)

        
even 1
odd 2
even 3
odd 4
even 5
odd 6
even 7
odd 8
even 9
odd 10
even 11
odd 12
even 13
odd 14
even 15
odd 16
even 17
odd 18
even 19
odd 20
even 21
odd 22
even 23
odd 24
even 25
odd 26
even 27
odd 28
even 29
odd 30
even 31
odd 32
even 33
odd 34
even 35
odd 36
even 37
odd 38
even 39
odd 40
even 41
odd 42
even 43
odd 44
even 45
odd 46
even 47
odd 48
even 49
odd 50
even 51
odd 52
even 53
odd 54
even 55
odd 56
even 57
odd 58
even 59
odd 60
even 61
odd 62
even 63
odd 64
even 65
odd 66
even 67
odd 68
even 69
odd 70
even 71
odd 72
even 73
odd 74
even 75
odd 76
even 77
odd 78
even 79
odd 80
even 81
odd 82
even 83
odd 84
even 85
odd 86
even 87
odd 88
even 89
odd 90
even 91
odd 92
even 93
odd 94
even 95
odd 96
even 97
odd 98
even 99
odd 100
for num in range(1,101):
    if (num%2!=0):
        print("odd",num)

        
odd 1
odd 3
odd 5
odd 7
odd 9
odd 11
odd 13
odd 15
odd 17
odd 19
odd 21
odd 23
odd 25
odd 27
odd 29
odd 31
odd 33
odd 35
odd 37
odd 39
odd 41
odd 43
odd 45
odd 47
odd 49
odd 51
odd 53
odd 55
odd 57
odd 59
odd 61
odd 63
odd 65
odd 67
odd 69
odd 71
odd 73
odd 75
odd 77
odd 79
odd 81
odd 83
odd 85
odd 87
odd 89
odd 91
odd 93
odd 95
odd 97
odd 99
for num in range(1,101):
    if (num%2!=0):
        print("odd",num)

        
odd 1
odd 3
odd 5
odd 7
odd 9
odd 11
odd 13
odd 15
odd 17
odd 19
odd 21
odd 23
odd 25
odd 27
odd 29
odd 31
odd 33
odd 35
odd 37
odd 39
odd 41
odd 43
odd 45
odd 47
odd 49
odd 51
odd 53
odd 55
odd 57
odd 59
odd 61
odd 63
odd 65
odd 67
odd 69
odd 71
odd 73
odd 75
odd 77
odd 79
odd 81
odd 83
odd 85
odd 87
odd 89
odd 91
odd 93
odd 95
odd 97
odd 99
for num in range(1,101):
    if (num%2!=0):
        print("odd...",num)

        
odd... 1
odd... 3
odd... 5
odd... 7
odd... 9
odd... 11
odd... 13
odd... 15
odd... 17
odd... 19
odd... 21
odd... 23
odd... 25
odd... 27
odd... 29
odd... 31
odd... 33
odd... 35
odd... 37
odd... 39
odd... 41
odd... 43
odd... 45
odd... 47
odd... 49
odd... 51
odd... 53
odd... 55
odd... 57
odd... 59
odd... 61
odd... 63
odd... 65
odd... 67
odd... 69
odd... 71
odd... 73
odd... 75
odd... 77
odd... 79
odd... 81
odd... 83
odd... 85
odd... 87
odd... 89
odd... 91
odd... 93
odd... 95
odd... 97
odd... 99
range(10)
range(0, 10)
help(range)
Help on class range in module builtins:

class range(object)
 |  range(stop) -> range object
 |  range(start, stop[, step]) -> range object
 |  
 |  Return an object that produces a sequence of integers from start (inclusive)
 |  to stop (exclusive) by step.  range(i, j) produces i, i+1, i+2, ..., j-1.
 |  start defaults to 0, and stop is omitted!  range(4) produces 0, 1, 2, 3.
 |  These are exactly the valid indices for a list of 4 elements.
 |  When step is given, it specifies the increment (or decrement).
 |  
 |  Methods defined here:
 |  
 |  __bool__(self, /)
 |      True if self else False
 |  
 |  __contains__(self, key, /)
 |      Return key in self.
 |  
 |  __eq__(self, value, /)
 |      Return self==value.
 |  
 |  __ge__(self, value, /)
 |      Return self>=value.
 |  
 |  __getattribute__(self, name, /)
 |      Return getattr(self, name).
 |  
 |  __getitem__(self, key, /)
 |      Return self[key].
 |  
 |  __gt__(self, value, /)
 |      Return self>value.
 |  
 |  __hash__(self, /)
 |      Return hash(self).
 |  
 |  __iter__(self, /)
 |      Implement iter(self).
 |  
 |  __le__(self, value, /)
 |      Return self<=value.
 |  
 |  __len__(self, /)
 |      Return len(self).
 |  
 |  __lt__(self, value, /)
 |      Return self<value.
 |  
 |  __ne__(self, value, /)
 |      Return self!=value.
 |  
 |  __reduce__(...)
 |      Helper for pickle.
 |  
 |  __repr__(self, /)
 |      Return repr(self).
 |  
 |  __reversed__(...)
 |      Return a reverse iterator.
 |  
 |  count(...)
 |      rangeobject.count(value) -> integer -- return number of occurrences of value
 |  
 |  index(...)
 |      rangeobject.index(value) -> integer -- return index of value.
 |      Raise ValueError if the value is not present.
 |  
 |  ----------------------------------------------------------------------
 |  Static methods defined here:
 |  
 |  __new__(*args, **kwargs) from builtins.type
 |      Create and return a new object.  See help(type) for accurate signature.
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  start
 |  
 |  step
 |  
 |  stop

>>> [range(10)]
[range(0, 10)]
>>> list(range(10))
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> list(range(0,20,40))
[0]
>>> list(range(0,10,2))
[0, 2, 4, 6, 8]
>>> list(range(1,10,3))
[1, 4, 7]
>>> 
>>> list(range(1,9,3))
[1, 4, 7]
>>> list(range(10,101,10))
[10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
>>> list(range(3,10,3))
[3, 6, 9]
>>> 
